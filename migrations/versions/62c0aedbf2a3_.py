"""empty message

Revision ID: 62c0aedbf2a3
Revises: 
Create Date: 2022-08-05 18:18:07.807991

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '62c0aedbf2a3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address_classes',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('data_source', sa.VARCHAR(), nullable=False),
    sa.Column('match_filter', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('exclude_filter', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('_meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('archives',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('archiver', sa.VARCHAR(), nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('transform', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ttl', postgresql.INTERVAL(), nullable=True),
    sa.Column('_meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contexts',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('context', sa.VARCHAR(), nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('_meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('default_address_label', sa.VARCHAR(), nullable=True),
    sa.Column('unidirectional', sa.BOOLEAN(), nullable=True),
    sa.Column('type', sa.VARCHAR(), nullable=False),
    sa.Column('excludes_self', sa.VARCHAR(), nullable=True),
    sa.Column('excludes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('_meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hosts',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('tags', postgresql.ARRAY(sa.VARCHAR()), nullable=True),
    sa.Column('no_agent', sa.BOOLEAN(), nullable=True),
    sa.Column('disabled', sa.BOOLEAN(), nullable=True),
    sa.Column('_meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schedules',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('start', sa.VARCHAR(), nullable=True),
    sa.Column('slip', postgresql.INTERVAL(), nullable=True),
    sa.Column('sliprand', sa.BOOLEAN(), nullable=True),
    sa.Column('repeat', postgresql.INTERVAL(), nullable=True),
    sa.Column('until', sa.VARCHAR(), nullable=True),
    sa.Column('max_runs', sa.INTEGER(), nullable=True),
    sa.Column('_meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('templates',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('includes', postgresql.ARRAY(sa.VARCHAR()), nullable=True),
    sa.Column('_meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tests',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('type', sa.VARCHAR(), nullable=False),
    sa.Column('spec', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('_meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('password', sa.LargeBinary(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=True),
    sa.Column('last_name', sa.String(length=30), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('addresses',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('address', sa.VARCHAR(), nullable=False),
    sa.Column('labels', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('remote_addresses', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('lead_bind_address', sa.VARCHAR(), nullable=True),
    sa.Column('pscheduler_address', sa.VARCHAR(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.VARCHAR()), nullable=True),
    sa.Column('disabled', sa.BOOLEAN(), nullable=True),
    sa.Column('no_agent', sa.BOOLEAN(), nullable=True),
    sa.Column('_meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('host', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['host'], ['hosts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups_address_classes',
    sa.Column('groups_id', sa.BigInteger(), nullable=False),
    sa.Column('address_classes_id', sa.BigInteger(), nullable=False),
    sa.Column('b_address', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['address_classes_id'], ['address_classes.id'], ),
    sa.ForeignKeyConstraint(['groups_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('groups_id', 'address_classes_id')
    )
    op.create_table('hosts_archives',
    sa.Column('hosts_id', sa.BigInteger(), nullable=False),
    sa.Column('archives_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['archives_id'], ['archives.id'], ),
    sa.ForeignKeyConstraint(['hosts_id'], ['hosts.id'], ),
    sa.PrimaryKeyConstraint('hosts_id', 'archives_id')
    )
    op.create_table('roles',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('subtasks',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('scheduled_offset', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('disabled', sa.BOOLEAN(), nullable=True),
    sa.Column('tools', postgresql.ARRAY(sa.VARCHAR()), nullable=True),
    sa.Column('reference', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('_meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('test', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['test'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('scheduled_by', sa.INTEGER(), nullable=True),
    sa.Column('disabled', sa.BOOLEAN(), nullable=True),
    sa.Column('tools', postgresql.ARRAY(sa.VARCHAR()), nullable=True),
    sa.Column('priority', sa.INTEGER(), nullable=True),
    sa.Column('reference', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('_meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('group', sa.BigInteger(), nullable=False),
    sa.Column('schedule', sa.BigInteger(), nullable=True),
    sa.Column('test', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['group'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['schedule'], ['schedules.id'], ),
    sa.ForeignKeyConstraint(['test'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('templates_address_classes',
    sa.Column('templates_id', sa.BigInteger(), nullable=False),
    sa.Column('address_classes_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['address_classes_id'], ['address_classes.id'], ),
    sa.ForeignKeyConstraint(['templates_id'], ['templates.id'], ),
    sa.PrimaryKeyConstraint('templates_id', 'address_classes_id')
    )
    op.create_table('templates_archives',
    sa.Column('templates_id', sa.BigInteger(), nullable=False),
    sa.Column('archives_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['archives_id'], ['archives.id'], ),
    sa.ForeignKeyConstraint(['templates_id'], ['templates.id'], ),
    sa.PrimaryKeyConstraint('templates_id', 'archives_id')
    )
    op.create_table('templates_contexts',
    sa.Column('templates_id', sa.BigInteger(), nullable=False),
    sa.Column('contexts_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['contexts_id'], ['contexts.id'], ),
    sa.ForeignKeyConstraint(['templates_id'], ['templates.id'], ),
    sa.PrimaryKeyConstraint('templates_id', 'contexts_id')
    )
    op.create_table('templates_groups',
    sa.Column('templates_id', sa.BigInteger(), nullable=False),
    sa.Column('groups_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['groups_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['templates_id'], ['templates.id'], ),
    sa.PrimaryKeyConstraint('templates_id', 'groups_id')
    )
    op.create_table('templates_hosts',
    sa.Column('templates_id', sa.BigInteger(), nullable=False),
    sa.Column('hosts_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['hosts_id'], ['hosts.id'], ),
    sa.ForeignKeyConstraint(['templates_id'], ['templates.id'], ),
    sa.PrimaryKeyConstraint('templates_id', 'hosts_id')
    )
    op.create_table('templates_schedules',
    sa.Column('templates_id', sa.BigInteger(), nullable=False),
    sa.Column('schedules_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['schedules_id'], ['schedules.id'], ),
    sa.ForeignKeyConstraint(['templates_id'], ['templates.id'], ),
    sa.PrimaryKeyConstraint('templates_id', 'schedules_id')
    )
    op.create_table('templates_tests',
    sa.Column('templates_id', sa.BigInteger(), nullable=False),
    sa.Column('tests_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['templates_id'], ['templates.id'], ),
    sa.ForeignKeyConstraint(['tests_id'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('templates_id', 'tests_id')
    )
    op.create_table('addresses_contexts',
    sa.Column('addresses_id', sa.BigInteger(), nullable=False),
    sa.Column('contexts_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['addresses_id'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['contexts_id'], ['contexts.id'], ),
    sa.PrimaryKeyConstraint('addresses_id', 'contexts_id')
    )
    op.create_table('groups_addresses',
    sa.Column('groups_id', sa.BigInteger(), nullable=False),
    sa.Column('addresses_id', sa.BigInteger(), nullable=False),
    sa.Column('b_address', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['addresses_id'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['groups_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('groups_id', 'addresses_id')
    )
    op.create_table('subtasks_archives',
    sa.Column('subtasks_id', sa.BigInteger(), nullable=False),
    sa.Column('archives_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['archives_id'], ['archives.id'], ),
    sa.ForeignKeyConstraint(['subtasks_id'], ['subtasks.id'], ),
    sa.PrimaryKeyConstraint('subtasks_id', 'archives_id')
    )
    op.create_table('tasks_archives',
    sa.Column('tasks_id', sa.BigInteger(), nullable=False),
    sa.Column('archives_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['archives_id'], ['archives.id'], ),
    sa.ForeignKeyConstraint(['tasks_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('tasks_id', 'archives_id')
    )
    op.create_table('templates_addresses',
    sa.Column('templates_id', sa.BigInteger(), nullable=False),
    sa.Column('addresses_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['addresses_id'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['templates_id'], ['templates.id'], ),
    sa.PrimaryKeyConstraint('templates_id', 'addresses_id')
    )
    op.create_table('templates_subtasks',
    sa.Column('templates_id', sa.BigInteger(), nullable=False),
    sa.Column('subtasks_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['subtasks_id'], ['subtasks.id'], ),
    sa.ForeignKeyConstraint(['templates_id'], ['templates.id'], ),
    sa.PrimaryKeyConstraint('templates_id', 'subtasks_id')
    )
    op.create_table('templates_tasks',
    sa.Column('templates_id', sa.BigInteger(), nullable=False),
    sa.Column('tasks_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['tasks_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['templates_id'], ['templates.id'], ),
    sa.PrimaryKeyConstraint('templates_id', 'tasks_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('templates_tasks')
    op.drop_table('templates_subtasks')
    op.drop_table('templates_addresses')
    op.drop_table('tasks_archives')
    op.drop_table('subtasks_archives')
    op.drop_table('groups_addresses')
    op.drop_table('addresses_contexts')
    op.drop_table('templates_tests')
    op.drop_table('templates_schedules')
    op.drop_table('templates_hosts')
    op.drop_table('templates_groups')
    op.drop_table('templates_contexts')
    op.drop_table('templates_archives')
    op.drop_table('templates_address_classes')
    op.drop_table('tasks')
    op.drop_table('subtasks')
    op.drop_table('roles')
    op.drop_table('hosts_archives')
    op.drop_table('groups_address_classes')
    op.drop_table('addresses')
    op.drop_table('users')
    op.drop_table('tests')
    op.drop_table('templates')
    op.drop_table('schedules')
    op.drop_table('hosts')
    op.drop_table('groups')
    op.drop_table('contexts')
    op.drop_table('archives')
    op.drop_table('address_classes')
    # ### end Alembic commands ###
